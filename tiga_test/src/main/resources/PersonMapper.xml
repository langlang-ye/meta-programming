<mapper namespace="com.ykl.dao.PersonDao">
    <!-- sql的唯一标识:  namespace.id(statementId)-->
    <!-- resultType="com.ykl.pojo.Person"  由于启用了别名, 对com.ykl.pojo 下所有的类都配置了别名,
    只要是类名(例: Person.java 可以写成 person persoN 不区分大小写的)一样就可以.  -->
    <select id="findAll" resultType="persON">
        select id, name, age, remark from person
    </select>

    <select id="findByCondition" resultType="perSon" parameterType="com.ykl.pojo.Person">
        select id, name, age, remark from person where id = #{id} and name = #{name}
    </select>

    <insert id="savePerson" parameterType="com.ykl.pojo.Person" >
        insert into person values(#{id}, #{name}, #{age}, #{remark})
    </insert>

    <!--修改用户-->
    <!--parameterType：参数类型-->
    <update id="updatePerson" parameterType="com.ykl.pojo.Person" >
        update person set name = #{name} where id = #{id}
    </update>

    <!-- 删除 -->
    <delete id="deletePerson" parameterType="com.ykl.pojo.Person" >
        delete from person where id = #{id}
    </delete>

    <!-- 根据id 查询  测试别名 -->
    <select id="selectPersonById" resultType="perSon" parameterType="iNt" >
        select id, name, age, remark from person where id = #{dddd}
    </select>

    <select id="countNum" resultType="iNt">
        select count(*) from person
    </select>

    <select id="listName" resultType="string">
        select name from person
    </select>

    <select id="selectAgeById" resultType="int" parameterType="int">
        select age from person where id = #{id}
    </select>

    <!--<select id="selectAgeByName" resultType="int" parameterType="String">
        select age from person where name = #{name}
    </select>-->
    <!-- sql的唯一标识（对应Java里的方法重载）重复， 由于底层是namespace.id 为key, 存储在map 中，会出现map 的value 覆盖的情况 -->
    <select id="selectAgeById" resultType="int" parameterType="String">
        select age from person where name = #{name}
    </select>


</mapper>